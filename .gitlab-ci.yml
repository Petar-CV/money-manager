image: docker:latest
services:
  - docker:dind

stages:
  - security-test
  - build-frontend
  - build-backend
  - deploy

variables:
  FRONTEND_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/frontend:latest
  FRONTEND_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/frontend:$CI_COMMIT_SHORT_SHA
  BACKEND_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/backend:latest
  BACKEND_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME/backend:$CI_COMMIT_SHORT_SHA

sast:
  stage: security-test
include:
  - template: Security/SAST.gitlab-ci.yml

build-backend:
  image: docker:latest
  stage: build-backend
  needs: []
  services:
    - docker:dind
  script:
    - rm .env # remove .env file if it exists
    - touch .env
    # Main postgres database environment variables
    - echo "DATABASE_URL"=$DATABASE_URL >> ".env"
    # Keycloak database environment variables
    - echo "KEYCLOAK_DB_ADDR"="$KEYCLOAK_DB_ADDR" >> ".env"
    - echo "KEYCLOAK_DB_DATABASE"="$KEYCLOAK_DB_DATABASE" >> ".env"
    - echo "KEYCLOAK_DB_USER"="$KEYCLOAK_DB_USER" >> ".env"
    - echo "KEYCLOAK_DB_SCHEMA"="$KEYCLOAK_DB_SCHEMA" >> ".env"
    - echo "KEYCLOAK_DB_PASSWORD"="$KEYCLOAK_DB_PASSWORD" >> ".env"
    - echo "KEYCLOAK_USER"="$KEYCLOAK_USER" >> ".env"
    - echo "KEYCLOAK_PASSWORD"="$KEYCLOAK_PASSWORD" >> ".env"
    # Building and pushing to the registry
    - docker build -t $BACKEND_TAG -t $BACKEND_COMMIT -f ./apps/api/Dockerfile .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $BACKEND_TAG
    - docker push $BACKEND_COMMIT
  only:
    - production

build-frontend:
  image: docker:latest
  stage: build-frontend
  needs: []
  services:
    - docker:dind
  script:
    - docker build -t $FRONTEND_TAG -t $FRONTEND_COMMIT -f ./apps/money-manager/Dockerfile .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $FRONTEND_TAG
    - docker push $FRONTEND_COMMIT
  environment:
    name: production
    url: https://money-manager.petar-cv.com
  only:
    - production

deploy:
  image: nginx:alpine
  stage: deploy
  needs: [build-frontend, build-backend]
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $FRONTEND_COMMIT"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $BACKEND_COMMIT"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f money-manager-frontend || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f money-manager-api || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 4200:80 --rm --name money-manager-frontend $FRONTEND_COMMIT"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 3333:3333 --rm --name money-manager-api $BACKEND_COMMIT"
  environment:
    name: production
    url: https://money-manager.petar-cv.com
  only:
    - production
